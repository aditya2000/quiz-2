{"version":3,"sources":["config/base.js","components/navbar.js","components/end/end.js","components/quiz/quiz.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Rebase","createClass","database","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","auth","signOut","react_default","a","createElement","className","Component","End","state","user","onClick","class","Row","_ref","points","level","lastsolved2","name","Quiz","quiz","numOfQuestions","answer","correct","hints","data2","timer","lastsolved","flag","getQuizData","handleChange","handleSubmit","compareBy","sortBy","updateLevel","db","firestore","settings","timestampsInSnapshots","key","b","arrayCopy","toConsumableArray","sort","setState","_this2","onAuthStateChanged","collection","where","currentUser","uid","onSnapshot","querySnapshot","forEach","doc","newLevel","data","newPoints","setTimeout","console","log","_this3","get","then","toString","prev","length","quest","concat","e","target","value","_this4","preventDefault","map","question","md5","toLowerCase","words","alert","snap","size","id","update","d","Number","Math","round","Date","getTime","dd","docRef","exists","time","splittime","time_first","catch","error","_this5","rows","rowData","quiz_Row","date_end","components_navbar","getDate","getHours","end_end","random","src","alt","onSubmit","type","placeholder","onChange","href","Login","login","signup","email","password","defineProperty","signInWithEmailAndPassword","createUserWithEmailAndPassword","u","add","userid","classes","form","margin","variant","style","color","withStyles","theme","container","display","flexWrap","root","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","textField","marginLeft","marginRight","dense","marginTop","width","menu","App","authListener","quiz_quiz","src_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aed2e2c4.chunk.js","sourcesContent":["import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBW0iDy1Hx0Gn36iL1XCq0DwV_dQ_iqhfM\",\r\n  authDomain: \"login-a09b3.firebaseapp.com\",\r\n  databaseURL: \"https://login-a09b3.firebaseio.com\",\r\n  projectId: \"login-a09b3\",\r\n  storageBucket: \"login-a09b3.appspot.com\",\r\n  messagingSenderId: \"486052664715\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\n\r\nconst base = Rebase.createClass(app.database());\r\n\r\nexport default app;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./navbar.css\";\r\nimport app from \"../config/base\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  logout() {\r\n    app.auth().signOut();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <nav>\r\n          <div className=\"navWide\">\r\n            <div className=\"wideDiv\">\r\n              <h2>CURIEUX</h2>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport app from \"../../config/base\";\nimport './end.css';\n\nclass End extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}\n    };\n    this.logout = this.logout.bind(this);\n  }\n\n  logout() {\n    app.auth().signOut();\n  }\n\n  render() {\n    return (\n    <div className=\"end\">\n        <h1>Quiz Ended</h1>\n        <button onClick={this.logout} class=\"btn3\">\n            Logout\n          </button>\n    </div>\n    )\n  }\n}\n\nexport default End;","import React, { Component } from \"react\";\r\nimport \"./quiz.css\";\r\nimport app from \"../../config/base\";\r\nimport firebase from \"../../config/base\";\r\nimport Navbar from \"../navbar\";\r\nimport End from '../end/end';\r\n\r\nimport md5 from \"crypto-js/md5\";\r\n//import { AutoSizer, Column, SortDirection, Table } from \"react-virtualized\";\r\n\r\nconst Row = ({ points, level,lastsolved2 ,name }) => (\r\n  <div className=\"row\">\r\n    <div>{points}</div>\r\n    <div>{level}</div>\r\n      <div>{lastsolved2}</div>\r\n       <div>{name}</div>\r\n  </div>\r\n);\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quiz: [],\r\n      numOfQuestions: 0,\r\n      level: 1,\r\n      answer: \"\",\r\n      correct: false,\r\n      hints: [],\r\n      data2: [],\r\n      points: 0,\r\n      timer: 0,\r\n      name: \"\",\r\n      lastsolved: 0,\r\n      lastsolved2: \"\",\r\n      flag: 0\r\n    };\r\n\r\n    this.getQuizData = this.getQuizData.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.compareBy.bind(this);\r\n    this.sortBy.bind(this);\r\n    this.updateLevel = this.updateLevel.bind(this);\r\n    this.db = firebase.firestore();\r\n    this.db.settings({\r\n      timestampsInSnapshots: true\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLevel();\r\n    //this.getQuizData();\r\n  }\r\n\r\n  componentWillMount() {}\r\n\r\n  logout() {\r\n    app.auth().signOut();\r\n  }\r\n  compareBy(key) {\r\n    return function(a, b) {\r\n      if (a[key] > b[key]) return -1;\r\n      if (a[key] < b[key]) return 1;\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  sortBy(key) {\r\n    let arrayCopy = [...this.state.data2];\r\n    arrayCopy.sort(this.compareBy(key));\r\n    this.setState({ data2: arrayCopy });\r\n  }\r\n\r\n  updateLevel() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.db\r\n          .collection(\"users\")\r\n          .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n          .onSnapshot(querySnapshot => {\r\n            querySnapshot.forEach(doc => {\r\n              var newLevel = doc.data().level;\r\n              var newPoints = doc.data().points;\r\n              this.setState(\r\n                {\r\n                  level: newLevel,\r\n                  points: newPoints\r\n                },\r\n                () => {\r\n                  this.getQuizData();\r\n                  this.setState({\r\n                    timer: 0\r\n                  });\r\n                  setTimeout(() => {\r\n                    this.setState({\r\n                      timer: 1\r\n                    });\r\n                  }, 5000);\r\n                  setTimeout(() => {\r\n                    this.setState({\r\n                      timer: 2\r\n                    });\r\n                  }, 10000);\r\n                }\r\n              );\r\n            });\r\n          });\r\n      } else {\r\n        console.log(\"USER NOT LOGGED IN\");\r\n      }\r\n    });\r\n  }\r\n\r\n  getQuizData() {\r\n    this.db.collection(\"users\")\r\n            .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then(querySnapshot => {\r\n              querySnapshot.forEach(doc => {\r\n                 this.setState({\r\n                   lastsolved: doc.data().lastsolved,\r\n                   lastsolved2: doc.data().lastsolved2,\r\n                   flag :1\r\n                   \r\n                })\r\n                \r\n               // console.log(\"current\"+Number(Math.round(new Date().getTime() / 1000)))\r\n                \r\n               // console.log(\"lastsolved\",this.state.lastsolved2)\r\n              });\r\n            });\r\n    this.db\r\n      .collection(\"questions\")\r\n      .where(\"level\", \"==\", this.state.level.toString())\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          this.setState(\r\n            prev => ({\r\n              quiz: [doc.data()],\r\n              numOfQuestions: doc.data().length\r\n            }),\r\n            () => {\r\n              //console.log(this.state.quiz)\r\n              var hints = [];\r\n              this.state.quiz.forEach(quest => {\r\n                if (quest.level == this.state.level) {\r\n                  hints = quest.hints;\r\n                }\r\n              });\r\n              this.setState({\r\n                hints: hints\r\n              });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    this.setState({\r\n      data2: []\r\n    });\r\n    this.db\r\n      .collection(\"users\")\r\n\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          this.setState({\r\n            data2: [...this.state.data2, doc.data()]\r\n          });\r\n          //console.log(doc.data());\r\n        });\r\n      });\r\n    //console.log(this.state.data2);\r\n    this.db\r\n      .collection(\"users\")\r\n      .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc =>\r\n          this.setState({\r\n            name: doc.data().name\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      answer: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    // console.log(\"OO\", this.state.data2);\r\n    e.preventDefault();\r\n    this.state.quiz.map(question => {\r\n      if (this.state.level.toString() === question.level) {\r\n        let ans = md5(this.state.answer.toLowerCase());\r\n        // console.log(ans.words[0]);\r\n        if (ans.words[0] == question.answer) {\r\n          alert(\"You're right!!\");\r\n         \r\n          \r\n         \r\n          const db = this.db;\r\n          db.collection(\"users\")\r\n            .where(\"level\", \">=\", this.state.level)\r\n            .get()\r\n            .then(snap => {\r\n              snap = snap.size;\r\n\r\n              if (snap < 10) {\r\n                db.collection(\"users\")\r\n                  .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                  .get()\r\n                  .then(querySnapshot => {\r\n                    querySnapshot.forEach(doc => {\r\n                      db.collection(\"users\")\r\n                        .doc(doc.id)\r\n                        .update({\r\n                          points: this.state.points + 10\r\n                        });\r\n                    });\r\n                  });\r\n              } else if (snap >=10&& snap < 15) {\r\n                db.collection(\"users\")\r\n                  .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                  .get()\r\n                  .then(querySnapshot => {\r\n                    querySnapshot.forEach(doc => {\r\n                      db.collection(\"users\")\r\n                        .doc(doc.id)\r\n                        .update({\r\n                          points: this.state.points + 9\r\n                        });\r\n                    });\r\n                  });\r\n              } else {\r\n                db.collection(\"users\")\r\n                  .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                  .get()\r\n                  .then(querySnapshot => {\r\n                    querySnapshot.forEach(doc => {\r\n                      db.collection(\"users\")\r\n                        .doc(doc.id)\r\n                        .update({\r\n                          points: this.state.points + 8\r\n                        });\r\n                    });\r\n                  });\r\n              }\r\n            \r\n            });\r\n          \r\n\r\n          this.setState(prev => ({\r\n            level: prev.level + 1\r\n          }));\r\n\r\n          const state = this.state;\r\n\r\n          db.collection(\"users\")\r\n            .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then(querySnapshot => {\r\n              querySnapshot.forEach(doc => {\r\n                db.collection(\"users\")\r\n                  .doc(doc.id)\r\n                  .update({\r\n                    level: state.level + 1\r\n                  });\r\n              });\r\n            });\r\n          var d = Number(Math.round(new Date().getTime() / 1000));\r\n          \r\n          var dd = new Date();\r\n           dd = dd.toString();\r\n          \r\n         // alert(dd.toString());\r\n          db.collection(\"users\")\r\n            .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then(querySnapshot => {\r\n              querySnapshot.forEach(doc => {\r\n                db.collection(\"users\")\r\n                  .doc(doc.id)\r\n                  .update({\r\n                    lastsolved: d,\r\n                    lastsolved2: dd\r\n                  });\r\n                \r\n              });\r\n            });\r\n\r\n          var docRef = db\r\n            .collection(\"firstsolved\")\r\n            .doc(this.state.level.toString());\r\n\r\n          docRef\r\n            .get()\r\n            .then(doc => {\r\n              if (doc.exists) {\r\n                if (doc.data().time == null) {\r\n                  docRef.update({\r\n                    time: d\r\n                  });\r\n\r\n                  db.collection(\"users\")\r\n                    .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                    .get()\r\n                    .then(querySnapshot => {\r\n                      querySnapshot.forEach(doc => {\r\n                        db.collection(\"users\")\r\n                          .doc(doc.id)\r\n                          .update({\r\n                            splittime: 0\r\n                          });\r\n                      });\r\n                    });\r\n                } else {\r\n                  var time_first = doc.data().time;\r\n\r\n                  db.collection(\"users\")\r\n                    .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                    .get()\r\n                    .then(querySnapshot => {\r\n                      querySnapshot.forEach(doc => {\r\n                        db.collection(\"users\")\r\n                          .doc(doc.id)\r\n                          .update({\r\n                            splittime: doc.data().lastsolved - time_first\r\n                          });\r\n                        //console.log(\"lastsolved2 =>\", doc.data().lastsolved2);\r\n                        this.setState({\r\n                          lastsolved :doc.data().lastsolved,\r\n                          lastsolved2: doc.data().lastsolved2\r\n                        })\r\n                        //console.log(\"lastsolved2 =>\", this.state.lastsolved2);\r\n                      });\r\n                    });\r\n\r\n                  // db.collection(\"users\")\r\n                  //   .where(\"userid\", \"==\", firebase.auth().currentUser.uid)\r\n                  //   .get()\r\n                  //   .then(querySnapshot => {\r\n                  //     querySnapshot.forEach(doc =>\r\n                  //        console.log(\"Look:\", doc.data().splittime)\r\n                  //     );\r\n                  //   });\r\n                }\r\n              } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n              }\r\n            })\r\n            .catch(function(error) {\r\n              console.log(\"Error getting document:\", error);\r\n            });\r\n        } else {\r\n          alert(\"Wrong\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const rows = this.state.data2.map(rowData => <Row {...rowData} />);\r\n    var date_end = new Date();\r\n    return (\r\n      <div className=\"quizApp\">\r\n        <Navbar />\r\n        {this.state.level>=40|| (date_end.getDate()>=26 && date_end.getHours()>=21)?(<End/>):(<div>\r\n          <div className=\"quiz\">\r\n          <h1>CONFUNDO</h1>\r\n          <h2>WELCOME {this.state.name} </h2>\r\n          <button onClick={this.logout} class=\"btn3\">\r\n            Logout\r\n          </button>\r\n          {this.state.quiz.map(question => {\r\n            if (this.state.level.toString() === question.level) {\r\n              return (\r\n                <div key={Math.random()}>\r\n                  <div class=\"polaroid\">\r\n                    <p class=\"container\">LEVEL : {question.level}</p>\r\n                    <img src={question.question} alt=\"question\" class=\"image\" />\r\n                  </div>\r\n                </div>\r\n              );\r\n            } else {\r\n              return <div key={Math.random()} />;\r\n            }\r\n          })}\r\n\r\n          <h3 class=\"hint\">Hints</h3>\r\n          <div class=\"hints\">\r\n            <h5>Reload after every 10 minutes for hints <br/>(max three hints)</h5>\r\n            <p key={Math.random()}>{this.state.hints[0]}</p>\r\n            {this.state.flag===1?(<div> {Number(Math.round(new Date().getTime() / 1000)) >= this.state.lastsolved+ 600? (\r\n              <p key={Math.random()}>{this.state.hints[1]}</p>\r\n            ) : (\r\n              <p key={Math.random()} />\r\n            )}</div>):(<div></div>)}\r\n            {this.state.flag===1?(<div>{Number(Math.round(new Date().getTime() / 1000)) >= this.state.lastsolved+1200 ? (\r\n              <p key={Math.random()}>{this.state.hints[2]}</p>\r\n            ) : (\r\n              <p key={Math.random()} />\r\n            )}</div>):(<div></div>)}\r\n          </div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your answer\"\r\n              onChange={this.handleChange}\r\n              class=\"ans\"\r\n            />\r\n            <input type=\"submit\" value=\"Submit\" class=\"btn3\" />\r\n          </form>\r\n        </div>\r\n        <div class=\"footer2\">\r\n          <h2>\r\n            Check out our Facebook page for bonus hints.\r\n            <a\r\n              href=\"https://www.facebook.com/curieuxsgtbkhalsa/\"\r\n              target=\"_blank\"\r\n            >\r\n              <img\r\n                src=\"http://cofarming.info/wp-content/uploads/2017/01/facebook-icon-preview-1-400x400.png\"\r\n                class=\"icon\"\r\n                alt=\"img\"\r\n              />\r\n            </a>\r\n          </h2>\r\n          <h2>--CLICK ON THE COLUMN'S. TO SORT ACCORDING THEM--</h2>\r\n        </div>\r\n        <div class=\"table\">\r\n          <div class=\"header\">\r\n            <div onClick={() => this.sortBy(\"points\")}>Points</div>\r\n            <div onClick={() => this.sortBy(\"level\")}>Level</div>\r\n              <div onClick={() => this.sortBy(\"lastsolved2\")}>Last Solved</div> \r\n            <div onClick={() => this.sortBy(\"name\")}>Name</div>\r\n          </div>\r\n          <div class=\"body\">{rows}</div>\r\n        </div>\r\n        <div class=\"rules\">\r\n            <h1>Rules</h1>\r\n            <ul><li>Keep our facebook page opened. Thats how you will be updated, during the event.</li>\r\n              <li>For interaction with the organizers there would be organizer managed Facebook page</li>\r\n              <li>Only alphabets and numbers are allowed.(No special characters)</li>\r\n              <li>Any attempt of hacking will lead to automatic disqualification.</li>\r\n              <li>If admin realizes that any participant has used any kind of unfair means to clear any level then the admin is liable to block the user without any prior notice to anyone and admin will be unquestionable.</li>\r\n              <li>Point Scheme will be as follows: \r\n                <ol>\r\n                  <li>First 10 players to clear the level will get 10 points.</li>\r\n                  <li>Next 15 players will get 9 points.</li>\r\n                  <li>Remaining players to clear that level will get 8 points.</li>\r\n                </ol>\r\n              </li>\r\n              <li>Top three will be awarded: \r\n                <ol>\r\n                  <li>The winners will be the top 3 players completing all the levels irrespective of points and split time.</li>\r\n                  <li> If no one is able to complete all the levels and the event ends, the players with maximum level will win. If levels are same then points will be considered and if points are same then lastsolved will be considered in deciding the winners.</li>\r\n                </ol>\r\n              </li>\r\n            </ul>\r\n        </div>\r\n        </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from \"react\";\r\nimport app from \"./config/base\";\r\nimport firebase from \"./config/base\";\r\nimport \"./login.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n\r\n  menu: {\r\n    width: 200\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    };\r\n\r\n    this.db = firebase.firestore();\r\n    this.db.settings({\r\n      timestampsInSnapshots: true\r\n    });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    app\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then()\r\n      .catch(error => {\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  signup(e) {\r\n    e.preventDefault();\r\n    app\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(u => {\r\n        this.db.collection(\"users\").add({\r\n          userid: firebase.auth().currentUser.uid,\r\n          level: 1,\r\n          lastsolved: 0,\r\n          lastsolved2: \"\",\r\n          splittime: 0,\r\n          points: 0,\r\n          name: this.state.email\r\n        });\r\n      })\r\n      .then(u => {\r\n        //alert(u);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"login\">\r\n        <p>\r\n          ENTER A VALID EMAIL ADDRESS BECAUSE THAT'S THE ONLY WAY TO CONTACT\r\n          YOU INCASE YOU WIN.\r\n        </p>\r\n        <p>FIRST SIGN UP, THEN LOGIN</p>\r\n        <div className=\"header\">\r\n          <h1>CONFUNDO'19</h1>\r\n        </div>\r\n\r\n        <form className={classes.form}>\r\n          <div class=\"form-group\">\r\n            <input\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              class=\"input\"\r\n              placeholder=\"Enter email\"\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              class=\"input\"\r\n              placeholder=\"Password\"\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" onClick={this.login} className=\"button\">\r\n            Login\r\n          </button>\r\n          <button onClick={this.signup} className=\"button\">\r\n            Signup\r\n          </button>\r\n        </form>\r\n        <div id=\"#footer\" className=\"footer\">\r\n          <br/>\r\n          <br/>\r\n          <p>\r\n            Made with{\" ❤️ \"}\r\n            <i className=\"fas fa-heart\" style={{ color: \"#dd1b3b\" }} /> by{\" \"}\r\n            <a href=\"https://github.com/dbhagesh\" target=\"_blank\">\r\n              Bhagesh Dhankher\r\n            </a>{\" \"}\r\n            and{\" \"}\r\n            <a href=\"https://github.com/aditya2000\" target=\"_blank\">\r\n              Aditya Dehal.\r\n            </a>\r\n            <br/>\r\n            Special Thanks to Sankalp Loomba\r\n            \r\n          </p>\r\n          <p>&copy; 2019 Curieux. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport Quiz from \"./components/quiz/quiz\";\r\nimport \"./App.css\";\r\nimport app from \"./config/base\";\r\nimport Login from \"./Login\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    app.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({ user });\r\n        // localStorage.setItem(\"user\", user.uid);\r\n      } else {\r\n        this.setState({ user: null });\r\n        //localStorage.removeItem(\"user\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"App\">{this.state.user ? <Quiz /> : <Login />}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}